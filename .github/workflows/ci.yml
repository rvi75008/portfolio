name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache docker images
      id: cache-docker-images
      uses: actions/cache@v1
      with:
        path: /var/lib/docker/overlay2
        key: ${{ runner.os }}-docker-images

    - name: install
      run: make install

    - name: Pulling all docker images
      run: docker-compose -f tests/docker-compose.yml pull

    - name: lint
      run: make lint

    - name: test
      run: make test

    - name: dbt deps
      uses: mwhitaker/dbt-action@master
      with:
        dbt_command: "dbt deps"

    - name: dbt run
      uses: mwhitaker/dbt-action@master
      with:
        dbt_command: "dbt run --profiles-dir tests/ -t dev"
      env:
        DBT_USER: ${{ secrets.DBT_USER }}
        DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}

    - name: dbt run
      uses: mwhitaker/dbt-action@master
      with:
        dbt_command: "dbt test --profiles-dir tests/ -t dev"
      env:
        DBT_USER: ${{ secrets.DBT_USER }}
        DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}

    - name: Get the dbt result
      if: ${{ always() }}
      run: echo "${{ steps.dbt-run.outputs.result }}"
      shell: bash

    - name: SonarCloud Scan
      # Only executed for one of the tested python version
      if: ${{ always() && matrix['python-version'] == 3.8 }}
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
